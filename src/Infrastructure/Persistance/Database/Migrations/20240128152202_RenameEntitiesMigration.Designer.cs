// <auto-generated />
using System;
using Crawler.Infrastructure.Persistance.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Crawler.Infrastructure.Persistance.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240128152202_RenameEntitiesMigration")]
    partial class RenameEntitiesMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Crawler.Domain.Entities.CrawlEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CrawlResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("Updated")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("CrawlEntity");
                });

            modelBuilder.Entity("Crawler.Domain.Entities.CrawlResultEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CapturedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CrawlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageWordsCount")
                        .HasColumnType("int");

                    b.Property<string>("TopWordsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CrawlId")
                        .IsUnique();

                    b.ToTable("CrawlResultEntity");
                });

            modelBuilder.Entity("Crawler.Domain.Entities.CrawlResultEntity", b =>
                {
                    b.HasOne("Crawler.Domain.Entities.CrawlEntity", "Crawl")
                        .WithOne("CrawlResult")
                        .HasForeignKey("Crawler.Domain.Entities.CrawlResultEntity", "CrawlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crawl");
                });

            modelBuilder.Entity("Crawler.Domain.Entities.CrawlEntity", b =>
                {
                    b.Navigation("CrawlResult")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
